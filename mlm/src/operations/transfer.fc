#include "../utils.fc";

(int) send_bounty(slice in_msg, int msg_value) impure {
  var ff = in_msg~load_uint(8);
  if (ff != 0xff) {
    return msg_value;
  }
  var ref = in_msg~load_slice(8 + 256);

  var message_int = begin_cell()
      ;; 0100 int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
      .store_uint(4, 4)
      ;; src:MsgAddressInt addr_none$00 
      .store_uint(0, 2)
      ;; dest:MsgAddressInt addr_std$10 anycast:(Maybe Anycast)
      .store_uint(4, 3)
      ;; workchain_id:int8 address:bits256
      .store_int(workchain_id, 8)
      .store_int(address, 256)
      ;; value:CurrencyCollection
      .store_grams(msg_value)
      ;; ihr_fee:Grams fwd_fee:Grams created_lt:uint64 created_at:uint32
      .store_uint(0, 9 + 64 + 32)
      ;; init:(..) body(..)
      .store_uint(0, 2)
      .store_uint(0, 5)
    .end_cell();
  send_raw_message(message_int, 0);
}

() Op::transfer(slice in_msg, int msg_value) impure {
  var grams = send_bounty(in_msg, msg_value);
  var (workchain_id, address) = get_source_address();
  var message_int = begin_cell()
      ;; 0100 int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
      .store_uint(4, 4)
      ;; src:MsgAddressInt addr_none$00 
      .store_uint(0, 2)
      ;; dest:MsgAddressInt addr_std$10 anycast:(Maybe Anycast)
      .store_uint(4, 3)
      ;; workchain_id:int8 address:bits256
      .store_int(workchain_id, 8)
      .store_int(address, 256)
      ;; value:CurrencyCollection
      .store_grams(grams)
      ;; ihr_fee:Grams fwd_fee:Grams created_lt:uint64 created_at:uint32
      .store_uint(0, 9 + 64 + 32)
      ;; init:(..) body(..)
      .store_uint(0, 2)
      .store_uint(0, 5)
    .end_cell();
  send_raw_message(message_int, 0);
}
